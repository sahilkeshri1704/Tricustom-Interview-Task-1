# Create custom google VPC network 

 resource "google_compute_network" "load-balanced-vms-network" {
   name                    = var.network_id
   project                 = var.project
   auto_create_subnetworks = false
 } 
  
resource "time_sleep" "wait_30_seconds" {
  create_duration = "30s"
}

 # Create subnet for new VPC

resource "google_compute_subnetwork" "subnetwork" {
  name          = var.subnet
  network       = var.network_id
  region        = var.region
  ip_cidr_range = var.ip_cidr_range
   
}



# Create a firewall rule to allow HTTP, SSH, RDP and ICMP traffic on managementnet

resource "google_compute_firewall" "firewall" {
  name    = var.firewall-rule
  source_ranges = ["0.0.0.0/0"]
  target_tags = ["private-ssh"]
  network = var.network_id
  allow {
    protocol = "tcp"
    ports    = ["22", "80", "3389","443"]
  }
  allow {
    protocol = "icmp"
  }
}



# Create a dedicated GCE instance

resource "google_compute_instance" "exemplar" {
  name         = var.instance_name
  machine_type = var.machine_type
  # region        = var.region
  zone         = var.zone
  labels       = var.labels
  # network = var.network_id
  tags         = ["http-server", "private-ssh"]
  
  metadata_startup_script = <<EOF
apt-get update -y
apt-get install nginx -y
chgrp root /var/www/html/index.html
chown root /var/www/html/index.html
chmod +r /var/www/html/index.html
sleep 300
shutdown -h now
EOF

  boot_disk {
    auto_delete = true
    device_name = var.instance_name
    initialize_params {
      image = "family/debian-10"
      size  = 10
      type  = "pd-standard"
    }
  }

  network_interface {
    network         = var.network_id
    subnetwork = var.subnet
    access_config {
      // Ephemeral public IP
    }
  }
}

resource "time_sleep" "startup_completion" {
  create_duration = "120s"
  depends_on      = [google_compute_instance.exemplar]
}




# Create a new SQL instance

resource "google_sql_database_instance" "instance" {
name = var.instance
database_version = var.database_version
region = var.region
settings {
tier = var.tier
}
}
resource "google_sql_database" "database" {
name = var.database
instance = "${google_sql_database_instance.instance.name}"
charset = var.charset
collation = "utf8_general_ci"
}
resource "google_sql_user" "users" {
name = var.users
instance = "${google_sql_database_instance.instance.name}"
host = "%"
password = var.password
}




