#******** Cloud Build *********

touch new-build-tf-apply.yaml

timeout: 1200s
steps:
# terraform init -input=false
- name: gcr.io/$PROJECT_ID/terraform
  args:
  - init
  - -input=false
# terraform validate
- name: gcr.io/$PROJECT_ID/terraform
  args:
  - validate
# terraform plan -input=false -out=tfplan
- name: gcr.io/$PROJECT_ID/terraform
  args:
  - plan
  - -input=false
  - -out=tfplan
# terraform apply -auto-approve -input=false tfplan
- name: gcr.io/$PROJECT_ID/terraform
  args:
  - apply
  - -auto-approve
  - -input=false
  - tfplan
artifacts:
  objects:
    location: 'gs://${_ARTIFACT_BUCKET_NAME}/terraform/cloudbuild/apply/$BUILD_ID'
    paths: ['cloudbuild-tf-apply.yaml', 'tfplan']
	

#  touch new-build-tf-plan.yaml

timeout: 1200s
steps:
# terraform init -input=false
- name: gcr.io/$PROJECT_ID/terraform
  args:
  - init
  - -input=false
# terraform validate
- name: gcr.io/$PROJECT_ID/terraform
  args:
  - validate
# terraform plan -input=false -out=tfplan
- name: gcr.io/$PROJECT_ID/terraform
  args:
  - plan
  - -input=false
  - -out=tfplan
artifacts:
  objects:
    location: 'gs://${_ARTIFACT_BUCKET_NAME}/terraform/cloudbuild/plan/$BUILD_ID'
    paths: ['cloudbuild-tf-plan.yaml', 'tfplan']
#************************************************************
#  main.tf

module "seed_trigger" {
  source                  = "../.."
  org_id                  = var.org_id
  billing_account         = var.billing_account
  group_org_admins        = var.group_org_admins
  group_billing_admins    = var.group_billing_admins
  default_region          = var.region
  org_project_creators    = var.org_project_creators
  sa_enable_impersonation = true
  project_prefix          = var.project_prefix
}

module "cloudbuild_trigger" {
  source                  = "../../modules/cloudbuild"
  org_id                  = var.org_id
  billing_account         = var.billing_account
  group_org_admins        = var.group_org_admins
  default_region          = var.region
  sa_enable_impersonation = true
  terraform_sa_email      = module.seed_bootstrap.terraform_sa_email
  terraform_sa_name       = module.seed_bootstrap.terraform_sa_name
  terraform_state_bucket  = module.seed_bootstrap.gcs_bucket_tfstate
  project_prefix          = var.project_prefix
}

#-------------------------------------**Set up the load balancer--------------------------------

  resource "google_compute_health_check" "default" {
  name               = "load-balanced-vms-check"
  check_interval_sec = 5
  healthy_threshold  = 2
  http_health_check {
    port               = 80
    port_specification = "USE_FIXED_PORT"
    proxy_header       = "NONE"
    request_path       = "/"
  }
  timeout_sec         = 5
  unhealthy_threshold = 2
}